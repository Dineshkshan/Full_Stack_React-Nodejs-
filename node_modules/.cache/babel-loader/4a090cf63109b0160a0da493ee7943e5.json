{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dines\\\\Desktop\\\\Full_Stack_Application\\\\client\\\\src\\\\HTML_page\\\\Register.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from 'react-bootstrap';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport axios from 'axios';\nconst phone = /[0-9]{10}$/;\n\nconst Register = ({\n  history\n}) => /*#__PURE__*/React.createElement(Formik, {\n  initialValues: {\n    Name: '',\n    UserName: '',\n    PhoneNumber: '',\n    Password: '',\n    ConfirmPassword: ''\n  },\n  onSubmit: values => {\n    axios.post(\"http://localhost:5000/Register\", values).then(resp => {\n      console.log(\"VALID\", resp);\n      history.push('./Login');\n    });\n  },\n  validationSchema: yup.object({\n    Name: yup.string().required(\"Required\").min(4, \"Minimum 4 characters required\").max(8, \"Maximum length is 8 character\"),\n    UserName: yup.string().required(\"Required\").min(4, \"Minimum 4 characters required\").max(8, \"Maximum length is 8 characters\"),\n    PhoneNumber: yup.string().required(\"Required\").matches(phone, \"Phone number is invalid\"),\n    Password: yup.string().required(\"Required\").min(4, \"Minimum 4 characters required\").max(8, \"Maximum length is 8 characters\"),\n    ConfirmPassword: yup.string().required(\"Required\").oneOf([yup.ref('Password'), null], \"Password doesn't match\")\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}, ({\n  handleChange,\n  handleSubmit,\n  errors,\n  values,\n  handleBlur\n}) => /*#__PURE__*/React.createElement(\"form\", {\n  onSubmit: handleSubmit,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"container mt-4\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"jumbotron\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 6\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"form-group\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 8\n  }\n}, /*#__PURE__*/React.createElement(\"label\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 6\n  }\n}, \"Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n  type: \"text\",\n  name: \"Name\",\n  className: errors.Name ? \"form-control is-invalid\" : \"form-control\",\n  onBlur: handleBlur,\n  onChange: handleChange,\n  value: values.Name,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 6\n  }\n}), errors.Name ? /*#__PURE__*/React.createElement(\"div\", {\n  className: \"text-danger\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 22\n  }\n}, errors.Name) : null), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"form-group\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 6\n  }\n}, /*#__PURE__*/React.createElement(\"label\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 6\n  }\n}, \"User Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n  type: \"text\",\n  name: \"UserName\",\n  className: errors.UserName ? \"form-control is-invalid\" : \"form-control\",\n  onBlur: handleBlur,\n  onChange: handleChange,\n  value: values.UserName,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 6\n  }\n}), errors.UserName ? /*#__PURE__*/React.createElement(\"div\", {\n  className: \"text-danger\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 25\n  }\n}, errors.UserName) : null), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"form-group\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 6\n  }\n}, /*#__PURE__*/React.createElement(\"label\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 6\n  }\n}, \"Phone Number:\"), /*#__PURE__*/React.createElement(\"input\", {\n  type: \"text\",\n  name: \"PhoneNumber\",\n  className: errors.PhoneNumber ? \"form-control is-invalid\" : \"form-control\",\n  onBlur: handleBlur,\n  onChange: handleChange,\n  value: values.PhoneNumber,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 6\n  }\n}), errors.PhoneNumber ? /*#__PURE__*/React.createElement(\"div\", {\n  className: \"text-danger\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 28\n  }\n}, errors.PhoneNumber) : null), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"form-group\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 6\n  }\n}, /*#__PURE__*/React.createElement(\"label\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 6\n  }\n}, \"Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n  type: \"password\",\n  name: \"Password\",\n  className: errors.Password ? \"form-control is-invalid\" : \"form-control\",\n  onBlur: handleBlur,\n  onChange: handleChange,\n  value: values.Password,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 6\n  }\n}), errors.Password ? /*#__PURE__*/React.createElement(\"div\", {\n  className: \"text-danger\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 25\n  }\n}, errors.Password) : null), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"form-group\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 6\n  }\n}, /*#__PURE__*/React.createElement(\"label\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 6\n  }\n}, \"Confirm Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n  type: \"password\",\n  name: \"ConfirmPassword\",\n  className: errors.ConfirmPassword ? \"form-control is-invalid\" : \"form-control\",\n  onChange: handleChange,\n  onBlur: handleBlur,\n  value: values.ConfirmPassword,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 6\n  }\n}), errors.ConfirmPassword ? /*#__PURE__*/React.createElement(\"div\", {\n  className: \"text-danger\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 32\n  }\n}, errors.ConfirmPassword) : null), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 6\n  }\n}, /*#__PURE__*/React.createElement(Button, {\n  type: \"submit\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 8\n  }\n}, \"Register\"))))));\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/dines/Desktop/Full_Stack_Application/client/src/HTML_page/Register.js"],"names":["React","Button","Formik","yup","axios","phone","Register","history","Name","UserName","PhoneNumber","Password","ConfirmPassword","values","post","then","resp","console","log","push","object","string","required","min","max","matches","oneOf","ref","handleChange","handleSubmit","errors","handleBlur"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport {Formik} from 'formik';\r\nimport * as yup from 'yup';\r\nimport axios from 'axios';\r\nconst phone = /[0-9]{10}$/;\r\n\r\nconst Register=({history})=>\r\n(\r\n    <Formik\r\n    initialValues={{\r\n        Name:'',\r\n        UserName:'',\r\n        PhoneNumber:'',\r\n        Password:'',\r\n        ConfirmPassword:''\r\n    }}\r\n    onSubmit={(values)=>\r\n    {\r\n        axios.post(\"http://localhost:5000/Register\",values)\r\n        .then(resp=>{\r\n        console.log(\"VALID\",resp);\r\n        history.push('./Login')\r\n        }\r\n        );\r\n      }}\r\n        validationSchema={\r\n          yup.object({\r\n              Name:yup.string()\r\n              .required(\"Required\")\r\n              .min(4,\"Minimum 4 characters required\")\r\n              .max(8,\"Maximum length is 8 character\"),\r\n              UserName:yup.string()\r\n              .required(\"Required\")\r\n              .min(4,\"Minimum 4 characters required\")\r\n              .max(8,\"Maximum length is 8 characters\"),\r\n              PhoneNumber:yup.string()\r\n              .required(\"Required\")\r\n              .matches(phone,\"Phone number is invalid\"),\r\n              Password:yup.string()\r\n              .required(\"Required\")\r\n              .min(4,\"Minimum 4 characters required\")\r\n              .max(8,\"Maximum length is 8 characters\"),\r\n             ConfirmPassword:yup.string()\r\n             .required(\"Required\")\r\n             .oneOf([yup.ref('Password'),null],\"Password doesn't match\")\r\n            })\r\n        }\r\n    >\r\n     {({handleChange, handleSubmit, errors, values, handleBlur})=>\r\n      (\r\n        <form onSubmit={handleSubmit}>\r\n        <div className=\"container mt-4\">\r\n     <div className=\"jumbotron\">\r\n       <div className=\"form-group\">\r\n     <label>Name:</label>\r\n     <input\r\n     type=\"text\"\r\n     name=\"Name\"\r\n     className={errors.Name ? \"form-control is-invalid\":\"form-control\"}\r\n     onBlur={handleBlur}\r\n     onChange={handleChange}\r\n     value={values.Name}\r\n     />\r\n     {errors.Name ? (<div className=\"text-danger\">{errors.Name}</div>):null}\r\n     </div>\r\n     <div className=\"form-group\">\r\n     <label>User Name:</label>\r\n     <input\r\n     type=\"text\"\r\n     name=\"UserName\"\r\n     className={errors.UserName ? \"form-control is-invalid\":\"form-control\"}\r\n     onBlur={handleBlur}\r\n     onChange={handleChange}\r\n     value={values.UserName}\r\n     />\r\n    {errors.UserName ? (<div className=\"text-danger\">{errors.UserName}</div>):null}\r\n     </div>\r\n     <div className=\"form-group\">\r\n     <label>Phone Number:</label>\r\n     <input\r\n     type=\"text\"\r\n     name=\"PhoneNumber\"\r\n     className={errors.PhoneNumber ? \"form-control is-invalid\":\"form-control\"}\r\n     onBlur={handleBlur}\r\n     onChange={handleChange}\r\n     value={values.PhoneNumber}\r\n     />\r\n    {errors.PhoneNumber ? (<div className=\"text-danger\">{errors.PhoneNumber}</div>):null}\r\n     </div>\r\n     <div className=\"form-group\">\r\n     <label>Password:</label>\r\n     <input\r\n     type=\"password\"\r\n     name=\"Password\"\r\n     className={errors.Password ? \"form-control is-invalid\":\"form-control\"}\r\n     onBlur={handleBlur}\r\n     onChange={handleChange}\r\n     value={values.Password}\r\n     />\r\n    {errors.Password ? (<div className=\"text-danger\">{errors.Password}</div>):null}\r\n     </div>\r\n     <div className=\"form-group\">\r\n     <label>Confirm Password:</label>\r\n     <input\r\n     type=\"password\"\r\n     name=\"ConfirmPassword\"\r\n     className={errors.ConfirmPassword ? \"form-control is-invalid\":\"form-control\"}\r\n     onChange={handleChange}\r\n     onBlur={handleBlur}\r\n     value={values.ConfirmPassword}\r\n     />\r\n    {errors.ConfirmPassword ? (<div className=\"text-danger\">{errors.ConfirmPassword}</div>):null}\r\n     </div>\r\n     <div>\r\n       <Button type=\"submit\">Register</Button>\r\n       </div>\r\n     </div>\r\n     </div>\r\n     </form> \r\n      )\r\n     }\r\n    </Formik>\r\n);\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}