{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dines\\\\Desktop\\\\Full_Stack_Application\\\\client\\\\src\\\\Register.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from 'react-bootstrap';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\n\nconst Register = () => {\n  /*#__PURE__*/\n  React.createElement(Formik, {\n    initialValues: {\n      FirstName: '',\n      SecondName: '',\n      PhoneNumber: '',\n      Password: '',\n      ConfirmPassword: ''\n    },\n    onSubmit: values => {\n      console.log(\"The values are\", values);\n    },\n    validationSchema: yup.object({\n      FirstName: yup.string().required(\"Required\").min(4, \"Minimum 4 characters required\").max(8, \"Maximum length is 8 character\"),\n      SecondName: yup.string().required(\"Required\").min(4, \"Minimum 4 characters required\").max(8, \"Maximum length is 8 characters\"),\n      PhoneNumber: yup.string().required(\"Required\").matches(phone, \"Phone number is invalid\"),\n      Password: yup.string().required(\"Required\").min(4, \"Minimum 4 characters required\").max(8, \"Maximum length is 8 characters\"),\n      ConfirmPassword: yup.string().required(\"Required\").oneOf([yup.ref('Password'), null], \"Password doesn't match\")\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, ({\n    handleChange,\n    handleSubmit,\n    errors,\n    values,\n    handleBlur\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jumbotron\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 6\n    }\n  }, \"First Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"FirstName\",\n    className: errors.FirstName ? \"form-control is-invalid\" : \"form-control\",\n    autoComplete: \"off\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.FirstName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 6\n    }\n  }), errors.FirstName ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 27\n    }\n  }, errors.FirstName) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 6\n    }\n  }, \"Second Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"SecondName\",\n    className: errors.SecondName ? \"form-control is-invalid\" : \"form-control\",\n    autoComplete: \"off\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.SecondName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 6\n    }\n  }), errors.SecondName ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 27\n    }\n  }, errors.SecondName) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 6\n    }\n  }, \"Phone Number:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"PhoneNumber\",\n    className: errors.PhoneNumber ? \"form-control is-invalid\" : \"form-control\",\n    autoComplete: \"off\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.PhoneNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 6\n    }\n  }), errors.PhoneNumber ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 28\n    }\n  }, errors.PhoneNumber) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 6\n    }\n  }, \"Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"Password\",\n    className: errors.Password ? \"form-control is-invalid\" : \"form-control\",\n    autoComplete: \"off\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.Password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 6\n    }\n  }), errors.Password ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, errors.Password) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 6\n    }\n  }, \"Confirm Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"ConfirmPassword\",\n    className: errors.ConfirmPassword ? \"form-control is-invalid\" : \"form-control\",\n    autoComplete: \"off\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.ConfirmPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 6\n    }\n  }), errors.ConfirmPassword ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 32\n    }\n  }, errors.ConfirmPassword) : null), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 8\n    }\n  }, \"Register\"))))));\n};\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/dines/Desktop/Full_Stack_Application/client/src/Register.js"],"names":["React","Button","Formik","yup","Register","FirstName","SecondName","PhoneNumber","Password","ConfirmPassword","values","console","log","object","string","required","min","max","matches","phone","oneOf","ref","handleChange","handleSubmit","errors","handleBlur"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport {Formik} from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nconst Register=()=>\r\n{\r\n    <Formik\r\n    initialValues={{\r\n        FirstName:'',\r\n        SecondName:'',\r\n        PhoneNumber:'',\r\n        Password:'',\r\n        ConfirmPassword:''\r\n    }}\r\n    onSubmit={(values)=>\r\n    {\r\n        console.log(\"The values are\",values);\r\n    }}\r\n        validationSchema={\r\n          yup.object({\r\n              FirstName:yup.string()\r\n              .required(\"Required\")\r\n              .min(4,\"Minimum 4 characters required\")\r\n              .max(8,\"Maximum length is 8 character\"),\r\n              SecondName:yup.string()\r\n              .required(\"Required\")\r\n              .min(4,\"Minimum 4 characters required\")\r\n              .max(8,\"Maximum length is 8 characters\"),\r\n              PhoneNumber:yup.string()\r\n              .required(\"Required\")\r\n              .matches(phone,\"Phone number is invalid\"),\r\n              Password:yup.string()\r\n              .required(\"Required\")\r\n              .min(4,\"Minimum 4 characters required\")\r\n              .max(8,\"Maximum length is 8 characters\"),\r\n             ConfirmPassword:yup.string()\r\n             .required(\"Required\")\r\n             .oneOf([yup.ref('Password'),null],\"Password doesn't match\")\r\n            })\r\n        }\r\n    >\r\n     {({handleChange, handleSubmit, errors, values, handleBlur})=>\r\n      (\r\n        <form onSubmit={handleSubmit}>\r\n        <div className=\"container mt-4\">\r\n     <div className=\"jumbotron\">\r\n       <div className=\"form-group\">\r\n     <label>First Name:</label>\r\n     <input\r\n     type=\"text\"\r\n     name=\"FirstName\"\r\n     className={errors.FirstName ? \"form-control is-invalid\":\"form-control\"}\r\n     autoComplete=\"off\"\r\n     onBlur={handleBlur}\r\n     onChange={handleChange}\r\n     value={values.FirstName}\r\n     />\r\n     {errors.FirstName ? (<div className=\"text-danger\">{errors.FirstName}</div>):null}\r\n     </div>\r\n     <div className=\"form-group\">\r\n     <label>Second Name:</label>\r\n     <input\r\n     type=\"text\"\r\n     name=\"SecondName\"\r\n     className={errors.SecondName ? \"form-control is-invalid\":\"form-control\"}\r\n     autoComplete=\"off\"\r\n     onBlur={handleBlur}\r\n     onChange={handleChange}\r\n     value={values.SecondName}\r\n     />\r\n    {errors.SecondName ? (<div className=\"text-danger\">{errors.SecondName}</div>):null}\r\n     </div>\r\n     <div className=\"form-group\">\r\n     <label>Phone Number:</label>\r\n     <input\r\n     type=\"text\"\r\n     name=\"PhoneNumber\"\r\n     className={errors.PhoneNumber ? \"form-control is-invalid\":\"form-control\"}\r\n     autoComplete=\"off\"\r\n     onBlur={handleBlur}\r\n     onChange={handleChange}\r\n     value={values.PhoneNumber}\r\n     />\r\n    {errors.PhoneNumber ? (<div className=\"text-danger\">{errors.PhoneNumber}</div>):null}\r\n     </div>\r\n     <div className=\"form-group\">\r\n     <label>Password:</label>\r\n     <input\r\n     type=\"password\"\r\n     name=\"Password\"\r\n     className={errors.Password ? \"form-control is-invalid\":\"form-control\"}\r\n     autoComplete=\"off\"\r\n     onBlur={handleBlur}\r\n     onChange={handleChange}\r\n     value={values.Password}\r\n     />\r\n    {errors.Password ? (<div className=\"text-danger\">{errors.Password}</div>):null}\r\n     </div>\r\n     <div className=\"form-group\">\r\n     <label>Confirm Password:</label>\r\n     <input\r\n     type=\"password\"\r\n     name=\"ConfirmPassword\"\r\n     className={errors.ConfirmPassword ? \"form-control is-invalid\":\"form-control\"}\r\n     autoComplete=\"off\"\r\n     onChange={handleChange}\r\n     onBlur={handleBlur}\r\n     value={values.ConfirmPassword}\r\n     />\r\n    {errors.ConfirmPassword ? (<div className=\"text-danger\">{errors.ConfirmPassword}</div>):null}\r\n     </div>\r\n     <div>\r\n       <Button type=\"submit\">Register</Button>\r\n       </div>\r\n     </div>\r\n     </div>\r\n     </form> \r\n      )\r\n     }\r\n    </Formik>\r\n}\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}